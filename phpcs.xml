<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer">
  <description />

  <file>.</file>

  <arg name="extensions" value="php,inc,lib"/>
  <arg value="n"/>

  <!-- Include the FunctionCallSignature sniff so we can set some properties
       to enforce a single space after the opening parenthesis and before the
       closing parenthesis, like this: test( $var );

       But we only want two of the error codes from this sniff, no matter how
       it changes over time, so set the severity of the entire sniff to 0
       as this will exclude all message codes it produces. -->

  <rule ref="PEAR.Functions.FunctionCallSignature">
    <properties>
      <property name="requiredSpacesAfterOpen" value="1"/>
      <property name="requiredSpacesBeforeClose" value="1"/>
      <!-- <property name="requiredSpaceAfterOpenBracket" value="1"/> -->
      <!-- <property name="requiredSpaceBeforeCloseBracket" value="1"/> -->
    </properties>
    <severity>0</severity>
  </rule>

  <!-- Now that we've excluded all message codes from FunctionCallSignature,
       re-enable the two codes that we actually want. This will change the severity
       of these codes from 0 (set by the above rule) to the default value (5). -->
  <!-- <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket" /> -->
  <!-- <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket" /> -->
</ruleset>
